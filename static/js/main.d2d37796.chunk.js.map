{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","timeTimerId","this","window","setInterval","setState","prevProps","prevState","name","props","console","info","toUTCString","slice","debug","clearInterval","className","React","Component","getRandomName","value","now","toString","App","clockName","hasClock","nameTimerId","hideClock","event","preventDefault","showClock","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAAIC,MAFf,EAKEC,YAAc,EALhB,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,YAAcE,OAAOC,aAAY,WACpC,EAAKC,SAAS,CACZN,MAAO,IAAIC,SAEZ,OAZP,gCAeE,SAAmBM,EAAkBC,GACnC,IAAQC,EAASN,KAAKO,MAAdD,KACAT,EAAUG,KAAKJ,MAAfC,MAEFA,IAAUQ,EAAUR,OAGxBW,QAAQC,KAAKZ,EAAMa,cAAcC,OAAO,IAAK,IAG1CL,IAASF,EAAUE,MAEtBE,QAAQI,MAAR,uBAA8BR,EAAUE,KAAxC,eAAmDA,MA3BzD,kCA+BE,WACEL,OAAOY,cAAcb,KAAKD,eAhC9B,oBAmCE,WACE,IAAQO,EAASN,KAAKO,MAAdD,KACAT,EAAUG,KAAKJ,MAAfC,MAER,OACE,sBAAKiB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGR,IAGF,YAED,sBAAMQ,UAAU,cAAhB,SACGjB,EAAMa,cAAcC,OAAO,IAAK,YAhD3C,GAA2BI,IAAMC,WCNjC,SAASC,IACP,IAAMC,EAAQpB,KAAKqB,MAAMC,WAAWT,OAAO,GAE3C,MAAM,SAAN,OAAgBO,GAQX,IAAMG,EAAb,4MACEzB,MAAQ,CACN0B,UAAW,UACXC,UAAU,GAHd,EAMEC,YAAc,EANhB,EAkCEC,UAAY,SAACC,GACXA,EAAMC,iBAEN,EAAKxB,SAAS,CACZoB,UAAU,KAtChB,EA0CEK,UAAY,WACV,EAAKzB,SAAS,CACZoB,UAAU,KA5ChB,uDAYE,WAAqB,IAAD,OAClBvB,KAAKwB,YAAcvB,OAAOC,aAAY,WACpC,EAAKC,SAAS,CACZmB,UAAWL,QAEZ,MAEHY,SAASC,iBAAiB,cAAe9B,KAAKyB,WAC9CI,SAASC,iBAAiB,QAAS9B,KAAK4B,aApB5C,kCA2BE,WACE3B,OAAOY,cAAcb,KAAKwB,aAE1BK,SAASE,oBAAoB,cAAe/B,KAAKyB,WACjDI,SAASE,oBAAoB,QAAS/B,KAAK4B,aA/B/C,oBAgDE,WACE,MAAgC5B,KAAKJ,MAA7B2B,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,UAElB,OACE,sBAAKR,UAAU,MAAf,UACE,6CACCS,GACI,cAAC,EAAD,CAAOjB,KAAMgB,WAvD1B,GAAyBP,IAAMC,WCZ/BgB,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.d2d37796.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: string;\n};\n\ntype State = {\n  today: Date,\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    today: new Date(),\n  };\n\n  timeTimerId = 0;\n\n  componentDidMount() {\n    this.timeTimerId = window.setInterval(() => {\n      this.setState({\n        today: new Date(),\n      });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    const { name } = this.props;\n    const { today } = this.state;\n\n    if (((today !== prevState.today))\n    ) {\n      /* eslint-disable no-console */\n      console.info(today.toUTCString().slice(-12, -4));\n    }\n\n    if ((name !== prevProps.name)\n    ) {\n      console.debug(`Renamed from ${prevProps.name} to ${name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timeTimerId);\n  }\n\n  render() {\n    const { name } = this.props;\n    const { today } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  clockName: string;\n  hasClock: boolean,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  nameTimerId = 0;\n\n  // currentName = this.state.clockName;\n\n  // oldName = this.state.clockName;\n\n  componentDidMount() {\n    this.nameTimerId = window.setInterval(() => {\n      this.setState({\n        clockName: getRandomName(),\n      });\n    }, 3300);\n\n    document.addEventListener('contextmenu', this.hideClock);\n    document.addEventListener('click', this.showClock);\n  }\n\n  // componentDidUpdate(_prevProps: {}, prevState: State) {\n  //   this.oldName = prevState.clockName;\n  // }\n\n  componentWillUnmount() {\n    window.clearInterval(this.nameTimerId);\n\n    document.removeEventListener('contextmenu', this.hideClock);\n    document.removeEventListener('click', this.showClock);\n  }\n\n  hideClock = (event: MouseEvent) => {\n    event.preventDefault();\n\n    this.setState({\n      hasClock: false,\n    });\n  };\n\n  showClock = () => {\n    this.setState({\n      hasClock: true,\n    });\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock\n          && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}